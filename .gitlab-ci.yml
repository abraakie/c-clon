image: gcc:latest

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

stages:
  - build
  - test
  - report

.setup:
  before_script:
    - apt-get update -qq
    - apt-get install -y cmake make gcovr

build:
  extends: .setup
  stage: build
  script:
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS="--coverage" -DCMAKE_EXE_LINKER_FLAGS="--coverage" ..
    - cmake --build . -j$(nproc)
  artifacts:
    paths:
      - build/

cppcheck:
  stage: test
  image: neszt/cppcheck-docker:2.17.1
  dependencies: []
  script:
    - cppcheck --enable=all --xml --check-level=exhaustive --suppress=missingIncludeSystem --suppress=checkersReport --output-file=cppcheck-report.xml ./src ./test -I ./include
    - cat cppcheck-report.xml
  artifacts:
    expire_in: 1 week
    paths:
      - cppcheck-report.xml
  allow_failure: true

codespell:
  stage: test
  dependencies: []
  before_script:
    - apt-get update -qq
    - apt-get install -y codespell
  script:
    - codespell --skip="*.git,*.pdf,*/build/*" . > codespell-report.txt || true
    - cat codespell-report.txt
  artifacts:
    expire_in: 1 week
    paths:
      - codespell-report.txt
  allow_failure: true

test:
  extends: .setup
  stage: test
  script:
    - cd build
    - ctest --verbose --output-on-failure --output-junit test_results.xml
    - gcovr --version
    - gcovr -r .. --cobertura coverage.xml --cobertura-pretty --verbose --gcov-ignore-parse-errors --filter ".*src/.*" --exclude ".*_deps/.*" --print-summary
  coverage: '/lines: \d+\.\d+\%/'
  artifacts:
    when: always
    reports:
      junit: build/test_results.xml
      coverage_report:
        coverage_format: cobertura
        path: build/coverage.xml
    paths:
      - build/coverage.xml
      - build/test_results.xml
    expire_in: 1 week

report:
  stage: report
  needs:
    - job: cppcheck
      artifacts: true
    - job: codespell
      artifacts: true
  before_script:
    - apt-get update
    - apt-get install -y jq xmlstarlet
  script:
    - ci/scripts/cppcheck_results_converter.sh ./cppcheck-report.xml ./cppcheck-report.json
    - ci/scripts/codespell_results_converter.sh ./codespell-report.txt ./codespell-report.json
    - jq -s 'add' cppcheck-report.json codespell-report.json > codequality.json
  artifacts:
    reports:
      codequality: codequality.json
